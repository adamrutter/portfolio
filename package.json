{
	"name": "portfolio",
	"version": "1.0.0",
	"description": "My portfolio website",
	"main": "index.js",
	"dependencies": {
		"normalize.css": "^8.0.1"
	},
	"devDependencies": {
		"@babel/cli": "^7.5.5",
		"@babel/core": "^7.5.5",
		"@babel/preset-env": "^7.5.5",
		"autoprefixer": "^9.6.1",
		"browserslist": "^4.6.6",
		"critical": "^1.3.9",
		"eslint": "^5.16.0",
		"eslint-config-airbnb-base": "^13.2.0",
		"eslint-config-prettier": "^6.0.0",
		"eslint-plugin-compat": "^2.7.0",
		"eslint-plugin-import": "^2.18.2",
		"file": "^0.2.2",
		"html-minifier": "^3.5.21",
		"imagemin": "^6.1.0",
		"imagemin-mozjpeg": "^7.0.0",
		"imagemin-pngquant": "^6.0.1",
		"node-sass": "^4.12.0",
		"node-watch": "^0.5.9",
		"onchange": "^4.1.0",
		"parallelshell": "^3.0.2",
		"postcss-cli": "^6.1.3",
		"stylelint": "^9.10.1",
		"stylelint-config-standard": "^18.3.0",
		"stylelint-no-unsupported-browser-features": "^3.0.2",
		"svg-sprite-generator": "0.0.7",
		"svgo": "^1.3.0",
		"uglify-es": "^3.3.9",
		"uglify-js": "^3.6.0"
	},
	"scripts": {
		"stylelint": "stylelint **/*.scss",
		"stylelint:fix": "stylelint **/*.scss --fix",
		"eslint": "eslint src/**/*.js",
		"eslint:fix": "eslint src/**/*.js --fix",
		"svgo": "svgo -f src/svg/ -o static/svg",
		"svg-sprites": "svg-sprite-generate -d static/svg -o static/svg/sprite.svg",
		"critical-css": "for i in $(find public -name '*.html'); do ./node_modules/.bin/critical $i --base public --css public/css/main.css --inline > tmp.html && mv tmp.html $i; done",
		"sass:build": "node-sass --output-style compressed src/scss/ --output static/css",
		"sass:watch": "node-sass --watch --recursive --source-map true --output-style compressed src/scss/ --output static/css",
		"postcss:autoprefixer": "postcss static/css/main.css --no-map -u autoprefixer -o static/css/main.css",
		"babel:build": "./node_modules/.bin/babel src/js/",
		"babel:watch": "./node_modules/.bin/babel src/js/ --watch --source-maps --out-file static/js/main.js",
		"uglifyjs": "uglifyjs -m -o static/js/main.js",
		"js": "npm run babel:build -s | npm run uglifyjs",
		"imagemin:watch": "node imagemin.js watch",
		"imagemin:build": "node imagemin.js build",
		"lint:all": "npm run stylelint --silent; npm run eslint --silent",
		"clean:public": "rm -rf public/",
		"clean:svg": "rm -rf static/svg/*.svg",
		"clean:css": "rm -rf static/css/*.css",
		"clean:js": "rm -rf static/js/*.js",
		"clean:img": "rm -rf static/img/*",
		"clean:all": "npm run clean:public && npm run clean:css && npm run clean:js",
		"build:svg": "npm run clean:svg && mkdir -p static/svg && npm run svgo && npm run svg-sprites",
		"build:img": "npm run clean:img && mkdir static/img && npm run imagemin:build",
		"build:html": "npm run critical-css && html-minifier --input-dir ./public --output-dir ./public --collapse-whitespace --file-ext html",
		"build:css": "npm run clean:css && mkdir static/css && npm run sass:build && npm run postcss:autoprefixer",
		"build:js": "npm run clean:js && mkdir static/js &&  npm run js",
		"watch:svg": "onchange 'src/svg/**' -- npm run build:svg",
		"watch:scss": "npm run sass:watch",
		"watch:js": "npm run babel:watch",
		"watch:img": "npm run imagemin:watch",
		"watch:src": "parallelshell 'npm run watch:scss' 'npm run watch:js' 'npm run watch:svg' 'npm run watch:img'",
		"build:preview": "npm run clean:public && npm run build:css && npm run build:js && npm run build:svg && hugo --buildFuture --buildDrafts && npm run build:html",
		"start:preview": "parallelshell 'hugo server --buildFuture --buildDrafts' 'npm run watch:src'",
		"build": "npm run clean:public && npm run build:css && npm run build:js && npm run build:img && npm run build:svg && hugo && npm run build:html",
		"start": "parallelshell 'hugo server' 'npm run watch:src'"
	},
	"author": "Adam Rutter",
	"license": "GPL-3.0",
	"repository": "https://gitlab.com/adamrutter/portfolio"
}
